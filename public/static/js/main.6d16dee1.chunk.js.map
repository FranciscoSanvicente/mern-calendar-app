{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","assets/img/simple-calendar-app-icon.png","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","components/Loading/Loading.js","router/Router.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","App/App.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","click","setClick","handleClick","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","defaultOptions","loop","autoplay","renderedSettings","preseveAspectRatio","className","top","big","cascade","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","left","onClick","id","options","animationData","noteData","height","width","noteData2","Navbar","useSelector","state","auth","src","logo","alt","style","data-toggle","aria-pressed","autocomplete","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","useStyles","makeStyles","image","justifyContent","alignItems","blueGrey","maxWidth","Loading","classes","Container","maxheight","Routers","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d16dee1.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    \n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    \n    evetStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Lottie from \"react-lottie\";\nimport Swal from 'sweetalert2';\nimport Fade from 'react-reveal/Fade';\nimport Slide from 'react-reveal/Slide';\n\nimport { useForm } from \"../../hooks/useForm\";\nimport { startLogin, startRegister } from \"../../actions/auth\";\nimport noteData from \"../../assets/login.json\";\nimport noteData2 from \"../../assets/38435-register.json\"\nimport \"../../styles/signInAndSignUp.css\";\n\nexport const LoginScreen = () => {\n\n  const  dispatch = useDispatch()\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n\n  const [formLoginValues, handleLoginInputChange] = useForm({\n    lEmail: \"\",\n    lPassword: \"\",\n  });\n\n  const [formRegisterValues, handleRegisterInputChange] = useForm({\n    rName: \"\",\n    rEmail: \"\",\n    rPassword1: \"\",\n    rPassword2: \"\",\n  });\n\n  const { lEmail, lPassword } = formLoginValues;\n  const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n  const handleLogin = e => {\n    e.preventDefault();\n    dispatch( startLogin( lEmail, lPassword))\n  }\n\n  const handleRegister = ( e ) => {\n    e.preventDefault();\n\n    if ( rPassword1 !== rPassword2 ) {\n        return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\n    }\n    console.log('?')\n    dispatch( startRegister( rEmail, rPassword1, rName ) );\n}\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    renderedSettings: {\n      preseveAspectRatio: \"xMdidYMid slice\",\n    },\n  };\n\n  return (\n    <>\n       \n      <div\n        className={click ? \"container-login sign-up-mode\" : \"container-login\"}\n      >\n        <div className=\"forms-container\">\n          <div className=\"signin-signup\">\n          <Fade top big cascade>\n            <form onSubmit={handleLogin} className=\"form sign-in-form\">\n              <h2 className=\"title\">Sign in</h2>\n              <div className=\"input-field\">\n                <i className=\"fas fa-user\"></i>\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  name=\"lEmail\"\n                  value={lEmail}\n                  onChange={handleLoginInputChange}\n                />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-lock\"></i>\n                <input\n                  type=\"password\"\n                  placeholder=\"Contraseña\"\n                  name=\"lPassword\"\n                  value={lPassword}\n                  onChange={handleLoginInputChange}\n                />\n              </div>\n              <input type=\"submit\" value=\"Login\" className=\"boton solid\" />\n            </form>\n            </Fade>\n            <form onSubmit={ handleRegister } className=\"form sign-up-form\">\n              <h2 className=\"title\">Sign up</h2>\n              <div className=\"input-field\">\n                <i className=\"fas fa-user\"></i>\n                <input\n                  type=\"text\"\n                  placeholder=\"Nombre\"\n                  name=\"rName\"\n                  value={rName}\n                  onChange={handleRegisterInputChange}\n                />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-envelope\"></i>\n                <input\n                  type=\"email\"\n                  placeholder=\"Correo\"\n                  name=\"rEmail\"\n                  value={rEmail}\n                  onChange={handleRegisterInputChange}\n                />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-lock\"></i>\n                <input\n                  type=\"password\"\n                  placeholder=\"Contraseña\"\n                  name=\"rPassword1\"\n                  value={rPassword1}\n                  onChange={handleRegisterInputChange}\n                />\n              </div>\n              <div className=\"input-field\">\n                <i className=\"fas fa-lock\"></i>\n                <input\n                  type=\"password\"\n                  placeholder=\"Repita la contraseña\"\n                  name=\"rPassword2\"\n                  value={rPassword2}\n                  onChange={handleRegisterInputChange}\n                />\n              </div>\n              <input type=\"submit\" className=\"boton\" value=\"Sign up\" />\n            </form>\n           \n          </div>\n        </div>\n        \n        <div className=\"panels-container\">\n        \n          <div className=\"panel left-panel\">\n          \n            <div className=\"content\">\n            <Slide left>\n              <h3>¿Eres Nuevo Aquí?</h3>\n              <p>\n               Registrate para poder usar la aplicación\n              </p>\n              <button\n                onClick={handleClick}\n                className=\"boton transparent\"\n                id=\"sign-up-btn\"\n              >\n                Registarse\n              </button>\n              </Slide>\n            </div>\n           \n            <div className=\"image\">\n            <Slide left>\n              <Lottie\n                options={{ animationData: noteData, ...defaultOptions }}\n                height=\"100%\"\n                width=\"100%\"\n                className=\"image\"\n              />\n            </Slide>\n            </div>\n          </div>\n         \n          <div className=\"panel right-panel\">\n          <div className=\"content\">\n              <h3>¿ Ya estás registrado?</h3>\n              <p>\n                Inicia seción para poder usar la aplicación\n              </p>\n              <button\n                onClick={handleClick}\n                className=\"boton transparent\"\n                id=\"sign-in-btn\"\n              >\n                Iniciar Secion\n              </button>\n            </div>\n            <div className=\"image\">\n              <Lottie\n                options={{ animationData: noteData2, ...defaultOptions }}\n                height=\"100%\"\n                width=\"100%\"\n                className=\"image\"\n              />\n            </div>\n          </div>\n      \n        </div>\n      </div>\n    \n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/simple-calendar-app-icon.265474f4.png\";","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport logo from \"../../assets/img/simple-calendar-app-icon.png\";\n\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-primary mb-4\">\n           \n            <img  src={logo} alt=\"Calendar\" style={{width: \"45px\"}}/>  \n\n            <span className=\"navbar-brand \">\n                { name }\n            </span>\n            \n            <button \n                 className=\"btn btn-success mr-4\" data-toggle=\"button\" aria-pressed=\"false\" autocomplete=\"off\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Spin from 'react-reveal/Spin';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <Spin>\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n        </Spin>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport Wobble from 'react-reveal/Wobble';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <Wobble>\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n        </Wobble>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport Fade from 'react-reveal/Fade';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [ dispatch ])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#0652DD' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <Fade top big cascade>\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n        </Fade>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport blueGrey from \"@material-ui/core/colors/blueGrey\";\nimport Lottie from \"react-lottie\";\nimport noteData from \"../../assets/spinner.json\";\nconst useStyles = makeStyles(() => ({\n  image: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: blueGrey[50],\n    maxWidth: \"100vw\",\n  },\n}));\n\nconst Loading = () => {\n  const classes = useStyles();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    renderedSettings: {\n      preseveAspectRatio: \"xMdidYMid slice\",\n    },\n  };\n\n  return (\n    <>\n      <Container maxheight=\"100vh\" className={classes.image}>\n        <div>\n          <Lottie\n            options={{ animationData: noteData, ...defaultOptions }}\n            width=\"100vw\"\n            height=\"100vh\"\n          />\n        </div>\n      </Container>\n    </>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { startChecking } from \"../actions/auth\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport Loading from '../components/Loading/Loading'\n\nexport const Routers = () => {\n\n  const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<Loading />);\n    }\n\n  return (\n\n    <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute\n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n\n  );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Routers } from \"../router/Router\";\nimport { store } from \"../store/store\";\n\nexport const App = () => {\n  return (\n    <div>\n      <Provider store={store}>\n        <Routers />\n      </Provider>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App/App\";\nimport './styles/style.css';\n\n\nReactDOM.render(\n      <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}